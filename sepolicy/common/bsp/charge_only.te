# Moto's charge only mode
type charge_only, domain;
type charge_only_exec, exec_type, file_type;

init_daemon_domain(charge_only)

# TODO: eliminate dac_override
# Use netlink socket
# config tty mode
# reboot
allow charge_only self:capability { net_admin dac_override sys_tty_config sys_boot };
allow charge_only tty_device:chr_file rw_file_perms;

# Access /dev/graphics/fb0 to draw charge only screen
allow charge_only graphics_device:dir search;
allow charge_only graphics_device:chr_file rw_file_perms;

# Access /dev/rtc0
allow charge_only rtc_device:chr_file rw_file_perms;

# key events
allow charge_only input_device:dir r_dir_perms;
allow charge_only input_device:chr_file rw_file_perms;

# Read power supply data
#allow charge_only sysfs_battery_supply:dir r_dir_perms;
#allow charge_only sysfs_battery_supply:file r_file_perms;
#allow charge_only sysfs_usb_supply:dir r_dir_perms;
#allow charge_only sysfs_usb_supply:file r_file_perms;

# Monitor kernel uevents for keys
allow charge_only self:netlink_kobject_uevent_socket create_socket_perms;

# wakelocks
wakelock_use(charge_only)

# power control / LEDs
# TODO: scope this down
allow charge_only sysfs:file write;

# create/manage /data/chargeonlymode
# TODO: This should be moved out of /data
allow charge_only system_data_file:dir { open search write add_name };
type_transition charge_only system_data_file:file chargeonly_data_file;
allow charge_only chargeonly_data_file:file {create read write open };

# allow charge_only_mode to launch memtest
allow charge_only shell_exec:file rx_file_perms;
#domain_auto_trans(charge_only, memtest_exec, memtest)

#This is required for thermal sysfs access
r_dir_file(charge_only, sysfs_thermal);

# MotoMods battery
#allow charge_only sysfs_greybus:dir r_dir_perms;
#allow charge_only sysfs_greybus:file rw_file_perms;
#allow charge_only sysfs_batt_mods:dir r_dir_perms;
#allow charge_only sysfs_batt_mods:file rw_file_perms;
#allow charge_only sysfs_mods_camd:dir r_dir_perms;
#allow charge_only sysfs_mods_camd:{ file lnk_file} r_file_perms;
# read access to sysfs filesystem
r_dir_file(charge_only, sysfs)
